\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/**}
\PYG{c+cm}{ * @file session.h}
\PYG{c+cm}{ * @author Aril Schultzen}
\PYG{c+cm}{ * @date 13.04.2016}
\PYG{c+cm}{ * @brief File containing function prototypes and includes for session.c}
\PYG{c+cm}{ */}

\PYG{c+cp}{\PYGZsh{}ifndef SESSION\PYGZus{}H}
\PYG{c+cp}{\PYGZsh{}define SESSION\PYGZus{}H}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}sensor\PYGZus{}server\PYGZus{}commons.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}filters.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}actions.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}sensor\PYGZus{}server.h\PYGZdq{}}

\PYG{c+cm}{/** @brief Sets up and starts the session with the client}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * Initializes and prepares the session and calls respond().}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @return Void}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n+nf}{setup\PYGZus{}session}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{session\PYGZus{}fd}\PYG{p}{,} \PYG{k}{struct} \PYG{n}{client\PYGZus{}table\PYGZus{}entry} \PYG{o}{*}\PYG{n}{new\PYGZus{}client}\PYG{p}{);}

\PYG{c+cp}{\PYGZsh{}endif }\PYG{c+cm}{/* !SESSION\PYGZus{}H */}
\end{Verbatim}
